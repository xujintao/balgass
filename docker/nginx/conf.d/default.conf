server {
   listen 443 ssl;
   server_name r2f2.com;

   ssl_certificate     /etc/nginx/ssl/cert.pem;
   ssl_certificate_key /etc/nginx/ssl/key.pem;

   # web
   location / {
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass http://r2f2.com:8000;
   }

   # pgadmin
   location = /pgadmin {
      return 302 $request_uri/;
   }
   location /pgadmin/ {
      proxy_set_header X-Script-Name /pgadmin;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://r2f2.com:8084/;
   }

   # game
   location /api/game {
      if ($http_upgrade != "websocket") {
         return 404;
      }
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass http://r2f2.com:8080;
   }
}

server {
   listen 443 ssl;
   server_name www.r2f2.com;

   ssl_certificate     /etc/nginx/ssl/cert.pem;
   ssl_certificate_key /etc/nginx/ssl/key.pem;

   # remove verbose www
   if ( $host ~ ^www\.(.+)$) {
      set $nowww_host $1;
      return 301 https://$nowww_host$request_uri;
   }
}

server {
   listen 443 ssl default_server;
   server_name _;

   ssl_certificate     /etc/nginx/ssl/cert.pem;
   ssl_certificate_key /etc/nginx/ssl/key.pem;

   location / {
      return 404;
   }
}

# http://patch.r2f2.com
server {
   listen 80;
   server_name patch.r2f2.com;
   location / {
      root /etc/nginx/patch;
      autoindex on;

      # kill cache
      add_header Last-Modified $date_gmt;
      add_header Cache-Control 'no-store, no-cache';
      if_modified_since off;
      expires off;
      etag off;
   }
}

server {
   listen 80;
   server_name ~^(.+\.)?r2f2\.com$;
   return 301 https://$host$request_uri;
}

server {
   listen 80 default_server;
   server_name _;
   location / {
      return 404;
   }
}