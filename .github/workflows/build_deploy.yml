name: Call Build and Deploy Server
on:
  workflow_call:
    inputs:
      server_name:
        required: true
        type: string
      tag:
        required: true
        type: string

concurrency:
  group: deploy
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set dynamic server host based on tag
        id: set-host
        run: |
          if [[ "${{ inputs.tag }}" == "latest" ]]; then
            echo "host=${{ secrets.SERVER_HOST_DEV }}" >> "$GITHUB_OUTPUT"
          else
            echo "host=${{ secrets.SERVER_HOST_PROD }}" >> "$GITHUB_OUTPUT"
          fi
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./docker/${{ inputs.server_name }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ inputs.server_name }}:${{ inputs.tag }}

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ steps.set-host.outputs.host }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -ex
            if [ ! -d "$HOME/balgass" ]; then
              echo "Directory ~/balgass not found, cloning repository..."
              git clone https://github.com/xujintao/balgass.git ~/balgass
            fi
            cd ~/balgass
            git stash || echo "Nothing to stash"
            git pull
            git stash pop || echo "No stash to pop or conflict occurred"
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ inputs.server_name }}:${{ inputs.tag }}
            docker stop ${{ inputs.server_name }} || true
            docker rm ${{ inputs.server_name }} || true
            ./docker/${{ inputs.server_name }}/start.sh ${{ inputs.tag }}
            docker image prune -f
