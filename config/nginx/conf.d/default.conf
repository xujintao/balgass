# https://mu.com
server {
   listen 443 ssl;
   server_name mu.com;

   ssl_certificate     /etc/nginx/ssl/mu.com.crt;
   ssl_certificate_key /etc/nginx/ssl/mu.com.key;

   location / {
      root /usr/share/nginx/html;
      # without index directive, directory index of "/usr/share/nginx/html/" is forbidden
      # index index.html; # with index directive, 
      error_page 500 502 503 504 50x.html;
   }
   location ~* admin {
      # proxy_pass http://$remote_addr;
      return 404;
   }
   location ~ \.php$ {
      return 404;
   }
}

# https://www.mu.com
server {
   listen 443 ssl;
   server_name www.mu.com;

   ssl_certificate     /etc/nginx/ssl/mu.com.crt;
   ssl_certificate_key /etc/nginx/ssl/mu.com.key;

   # remove verbose www
   if ( $host ~ ^www\.(.+)$) {
      set $nowww_host $1;
      return 301 https://$nowww_host$request_uri;
   }
}

# https://api.mu.com
server {
   listen 443 ssl;
   server_name api.mu.com;

   ssl_certificate     /etc/nginx/ssl/mu.com.crt;
   ssl_certificate_key /etc/nginx/ssl/mu.com.key;

   location / {
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      # proxy_set_header X-Forwarded-Ssl on;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_pass http://192.168.0.101:8080;
   }
}

# https://gitlab.mu.com
server {
   listen 443 ssl;
   server_name gitlab.mu.com;

   #ssl on;
   ssl_certificate     /etc/nginx/ssl/mu.com.crt;
   ssl_certificate_key /etc/nginx/ssl/mu.com.key;

   #location ^~ /gitlab {
   #   proxy_pass http://gitlab.xxx.com;
   #}

   location / {
      proxy_set_header Host $http_host;
      #proxy_set_header X-Forwarded-Ssl on;
      #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # proxy_pass http://$server_name:8081;
      # nginx docker的dns没有配置，无法解析gitlab.mu.com
      proxy_pass http://192.168.0.101:8081;
   }
}

# https://seafile.mu.com
server {
   listen 443 ssl;
   server_name seafile.mu.com;

   ssl_certificate     /etc/nginx/ssl/mu.com.crt;
   ssl_certificate_key /etc/nginx/ssl/mu.com.key;

   location / {
      proxy_set_header Host $http_host;
      proxy_pass http://192.168.0.101:8082;
   }
}

# https://xxx
server {
   listen 443 ssl default_server;
   server_name _;

   ssl_certificate     /etc/nginx/ssl/mu.com.crt;
   ssl_certificate_key /etc/nginx/ssl/mu.com.key;

   location / {
      return 404;
   }
}

# http://192.168.0.101
# configuration wizard
server {
   listen 80;
   server_name 192.168.0.101;

   location / {
      root /etc/nginx/dns;
      #autoindex on;
      index index.html;
   }
}

# http://patches.mu.com
# patches
server {
   listen 80;
   server_name patches.mu.com;
   location / {
      root /etc/nginx/patches;
   }
}

# http://xxx.mu.com
# 301 to https
server {
   listen 80;
   server_name ~^(.+\.)?mu\.com$;
   return 301 https://$host$request_uri;
}

# http://xxx
server {
   listen 80 default_server;
   server_name _;
   location / {
      return 404;
   }
}